# Note: This file is modified from one generated by `nixos-generate-config`, following:
# https://openzfs.github.io/openzfs-docs/Getting%20Started/NixOS/Root%20on%20ZFS/0-overview.html

{ config, lib, pkgs, modulesPath, ... }:

let
  hostName = config.networking.hostName;
  perHost = config._module.args.mine.perHost.${hostName};
  inherit (perHost) mirrorDrives partitions pools;
in
{
  imports = [
    ./zfs.nix

    (lib.mkMerge [{

  fileSystems."/" =
    { device = "${pools.main}/${hostName}";
      fsType = "zfs"; options = [ "zfsutil" ];
    };

  fileSystems."/nix" =
    { device = "${pools.main}/${hostName}/nix";
      fsType = "zfs"; options = [ "zfsutil" ];
    };

  fileSystems."/srv" =
    { device = "${pools.main}/${hostName}/srv";
      fsType = "zfs"; options = [ "zfsutil" ];
    };

  fileSystems."/state" =
    { device = "${pools.main}/${hostName}/state";
      fsType = "zfs"; options = [ "zfsutil" ];
    };

  fileSystems."/tmp" =
    { device = "${pools.main}/${hostName}/tmp";
      fsType = "zfs"; options = [ "zfsutil" ];
    };

  fileSystems."/usr/local" =
    { device = "${pools.main}/${hostName}/usr/local";
      fsType = "zfs"; options = [ "zfsutil" ];
    };

  fileSystems."/var/cache" =
    { device = "${pools.main}/${hostName}/var/cache";
      fsType = "zfs"; options = [ "zfsutil" ];
    };

  fileSystems."/var/games" =
    { device = "${pools.main}/${hostName}/var/games";
      fsType = "zfs"; options = [ "zfsutil" ];
    };

  fileSystems."/var/lib" =
    { device = "${pools.main}/${hostName}/var/lib";
      fsType = "zfs"; options = [ "zfsutil" ];
    };

  fileSystems."/var/local" =
    { device = "${pools.main}/${hostName}/var/local";
      fsType = "zfs"; options = [ "zfsutil" ];
    };

  fileSystems."/var/log" =
    { device = "${pools.main}/${hostName}/var/log";
      fsType = "zfs"; options = [ "zfsutil" ];
    };

  fileSystems."/var/tmp" =
    { device = "${pools.main}/${hostName}/var/tmp";
      fsType = "zfs"; options = [ "zfsutil" ];
    };

  fileSystems."/boot" =
    { device = "${pools.boot}/${hostName}";
      fsType = "zfs"; options = [ "zfsutil" ];
    };

  fileSystems."/etc/nixos" =
    { device = "/state/etc/nixos";
      fsType = "none";
      options = [ "bind" ];
    };

  fileSystems."/etc/cryptkey.d" =
    { device = "/state/etc/cryptkey.d";
      fsType = "none";
      options = [ "bind" ];
    };

  # TODO: Will not want to keep this, for users with encrypted home auto-mounted by PAM.
  fileSystems."/home/d" =
    { device = "${pools.main}/${hostName}/home/d";
      fsType = "zfs"; options = [ "zfsutil" ];
    };

  swapDevices =
    map (drive: { device = "/dev/disk/by-id/${drive}-part${toString partitions.swap}";
                  randomEncryption.enable = true; })
      mirrorDrives;
}

(with builtins;
{
  fileSystems = (listToAttrs
    (map (drive: { name = "/boot/efis/${drive}-part${toString partitions.EFI}";
                   value = {
                     device = "/dev/disk/by-id/${drive}-part${toString partitions.EFI}";
                     fsType = "vfat"; options = [ "x-systemd.idle-timeout=1min" "x-systemd.automount" "noauto" ];
                   }; })
      mirrorDrives));
})
    ])  # mkMerge
  ];  # imports
}
