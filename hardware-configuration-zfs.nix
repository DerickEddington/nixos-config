# TODO: Refactor to be more general - variables to abstract aspects like pool
# and device names - and refactor to import a new ./hosts/shape.nix file that
# defines the per-host specific values for those variables.

# TODO: Move the Tuxedo stuff into the new per-host file.

# Note: This file is modified from one generated by `nixos-generate-config`.

{ config, lib, pkgs, modulesPath, ... }:

let
  # TODO: Until tuxedo-control-center is in pkgs, must fetch directly from the
  #       contributor.  Once it is in pkgs, this variable and its uses should be
  #       deleted, and the hardware.tuxedo-control-center.enable option (defined
  #       below) will already be declared.
  ext-tcc = assert ! (let nixpkgs = import <nixpkgs> {}; in nixpkgs ? tuxedo-control-center);
            import (builtins.fetchTarball "https://github.com/blitz/tuxedo-nixos/archive/master.tar.gz");
in
{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")  # TODO: Keep? What does this do?
      ext-tcc.module  # TODO: Remove once tuxedo-control-center is in pkgs.
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "ahci" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  # hardware.tuxedo-keyboard.enable = true;  # Already enabled by the next below.
  hardware.tuxedo-control-center.enable = true;

  fileSystems."/" =
    { device = "main-1z9h4t/shape";
      fsType = "zfs"; options = [ "zfsutil" ];
    };

  fileSystems."/nix" =
    { device = "main-1z9h4t/shape/nix";
      fsType = "zfs"; options = [ "zfsutil" ];
    };

  fileSystems."/srv" =
    { device = "main-1z9h4t/shape/srv";
      fsType = "zfs"; options = [ "zfsutil" ];
    };

  fileSystems."/state" =
    { device = "main-1z9h4t/shape/state";
      fsType = "zfs"; options = [ "zfsutil" ];
    };

  fileSystems."/tmp" =
    { device = "main-1z9h4t/shape/tmp";
      fsType = "zfs"; options = [ "zfsutil" ];
    };

  fileSystems."/usr/local" =
    { device = "main-1z9h4t/shape/usr/local";
      fsType = "zfs"; options = [ "zfsutil" ];
    };

  fileSystems."/var/cache" =
    { device = "main-1z9h4t/shape/var/cache";
      fsType = "zfs"; options = [ "zfsutil" ];
    };

  fileSystems."/var/games" =
    { device = "main-1z9h4t/shape/var/games";
      fsType = "zfs"; options = [ "zfsutil" ];
    };

  fileSystems."/var/lib" =
    { device = "main-1z9h4t/shape/var/lib";
      fsType = "zfs"; options = [ "zfsutil" ];
    };

  fileSystems."/var/local" =
    { device = "main-1z9h4t/shape/var/local";
      fsType = "zfs"; options = [ "zfsutil" ];
    };

  fileSystems."/var/log" =
    { device = "main-1z9h4t/shape/var/log";
      fsType = "zfs"; options = [ "zfsutil" ];
    };

  fileSystems."/var/tmp" =
    { device = "main-1z9h4t/shape/var/tmp";
      fsType = "zfs"; options = [ "zfsutil" ];
    };

  fileSystems."/boot" =
    { device = "boot-1z9h4t/shape";
      fsType = "zfs"; options = [ "zfsutil" ];
    };

  fileSystems."/etc/nixos" =
    { device = "/state/etc/nixos";
      fsType = "none";
      options = [ "bind" ];
    };

  fileSystems."/etc/cryptkey.d" =
    { device = "/state/etc/cryptkey.d";
      fsType = "none";
      options = [ "bind" ];
    };

  # TODO: Will not want to keep this, for users with encrypted home auto-mounted by PAM.
  fileSystems."/home/d" =
    { device = "main-1z9h4t/shape/home/d";
      fsType = "zfs"; options = [ "zfsutil" ];
    };

  fileSystems."/boot/efis/nvme-Samsung_SSD_970_EVO_Plus_2TB_S59CNM0R706239E-part2" =
    { device = "/dev/disk/by-uuid/9BC0-C3BF";
      fsType = "vfat"; options = [ "x-systemd.idle-timeout=1min" "x-systemd.automount" "noauto" ];
    };

  fileSystems."/boot/efis/nvme-Samsung_SSD_970_EVO_Plus_2TB_S59CNM0R706236Y-part2" =
    { device = "/dev/disk/by-uuid/9BC1-1A18";
      fsType = "vfat"; options = [ "x-systemd.idle-timeout=1min" "x-systemd.automount" "noauto" ];
    };

  swapDevices = [
    { device = "/dev/disk/by-id/nvme-Samsung_SSD_970_EVO_Plus_2TB_S59CNM0R706239E-part5"; randomEncryption.enable = true; }
    { device = "/dev/disk/by-id/nvme-Samsung_SSD_970_EVO_Plus_2TB_S59CNM0R706236Y-part5"; randomEncryption.enable = true; }
  ];
}
